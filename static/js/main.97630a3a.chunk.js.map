{"version":3,"sources":["utils/setAuthToken.js","konfig/Api.js","store/actions/authActions.js","validation/is-empty.js","store/reducers/authReducer.js","store/reducers/shortUrlReducer.js","store/reducers/rootReducer.js","store.js","component/layout/SignedInLinks.js","component/layout/SignedOutLinks.js","component/layout/Navbar.js","component/auth/Register.js","component/auth/Login.js","store/actions/shortUrlActions.js","component/Home.js","component/pages/profile.js","component/pages/editUrl.js","component/pages/myUrl.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","ApiUrl","registerUser","newUser","dispatch","post","then","res","console","log","type","catch","err","loginUser","userData","data","localStorage","setItem","decoded","jwt_decode","setCurrentUser","payload","logoutUser","removeItem","isEmpty","value","undefined","Object","keys","length","trim","initState","authError","isAuthenticated","user","registerStatus","authReducer","state","arguments","action","objectSpread","response","urlShort","shortUrlReducer","shortUrl","rootReducer","combineReducers","auth","store","createStore","compose","applyMiddleware","thunk","connect","actionCreators","props","react_default","a","createElement","className","NavLink","to","onClick","SignedOutLinks","links","layout_SignedInLinks","layout_SignedOutLinks","react_materialize_lib","Link","Register","name","email","password","password2","handleChange","e","_this","setState","defineProperty","target","id","preventDefault","this","Redirect","errorName","errorEmail","errorPassword2","errorPassword","onSubmit","handleSubmit","bind","s","label","error","onChange","Component","Login","createShortUrl","url","Home","originalUrl","header","trigger","href","src","avatar","alt","EditUrl","title","urlCode","_this2","put","_id","status","defaultValue","MyUrl","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","formatDate","val","time","Date","concat","getFullYear","getMonth","getDate","listUrl","from","get","socket","openSocket","on","map","totalClicks","urlId","_this3","method","resData","prevState","filter","p","_this4","_this$state","dataUrl","createdAt","item","key","handlDelete","editUrl","profile","jwtToken","currentTime","now","exp","window","location","App","BrowserRouter","Navbar","Switch","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.97630a3a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    //Apply to every request\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    //Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","const ApiUrl = 'https://bitlyclonerefactory.herokuapp.com/';\n\nexport default ApiUrl;","import axios from \"axios\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport ApiUrl from '../../konfig/Api';\n\nexport const registerUser = newUser => dispatch => {\n  axios\n    .post(ApiUrl+\"api/users/register\", newUser)\n    .then(res => console.log(res))\n    .then(res => {\n      dispatch({ type: \"REGISTER_SUCCESS\" });\n    })\n    .catch(err => {\n      dispatch({ type: \"REGISTER_ERROR\", err });\n    });\n};\n\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(ApiUrl+\"api/users/login\", userData)\n    .then(res => {\n      // Save to localstorage\n      const { token } = res.data;\n      // Set token to localstorage\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user;\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err => {\n      dispatch({ type: \"LOGIN_ERROR\", err });\n    });\n};\n\n//Set login user\nexport const setCurrentUser = decoded => {\n  return {\n    type: \"LOGIN_SUCCESS\",\n    payload: decoded\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from localStorage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","const isEmpty = value => {\n  return(\n    value === undefined ||\n    value === null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0)\n  )\n};\nexport default isEmpty;","import isEmpty from \"../../validation/is-empty\";\n\nconst initState = {\n  authError: null,\n  isAuthenticated: false,\n  user: {},\n  registerStatus : false\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"login error\");\n      return {\n        ...state,\n        authError: \"Login failed\"\n      };\n\n    case \"LOGIN_SUCCESS\":\n      console.log(\"login success\");\n      return {\n        ...state,\n        authError: null,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n\n    case \"REGISTER_SUCCESS\":\n      console.log(\"register success\");\n      return {\n        ...state,\n        authError: null,\n        registerStatus: true\n      };\n\n    case \"REGISTER_ERROR\":\n      return {\n        ...state,\n        authError: action.err.response.data\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  urlShort: \"\"\n};\n\nconst shortUrlReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"SHORT_URL_SUCCESS\":\n      console.log(\"success\");\n      return {\n        ...state,\n        urlShort: action.res.data.shortUrl\n      };\n    case \"SHORT_URL_ERROR\":\n      console.log(\"short url error\");\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default shortUrlReducer;\n","import authReducer from \"./authReducer\";\nimport shortUrlReducer from \"./shortUrlReducer\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  shortUrl: shortUrlReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)));\n\nexport default store;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../../store/actions/authActions\"; //connect to authActions\nconst SignedInLinks = props => {\n  const { logoutUser } = props;\n  return (\n    <div>\n      <ul className=\"right\">\n        <li>\n          <NavLink to=\"/myurl\">My Url</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/logout\" onClick={logoutUser}>\n            Log Out\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\n//connect redux store to component\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  actionCreators\n)(SignedInLinks);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li>\n          <NavLink to=\"/register\">Register</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/login\">Login</NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Navbar } from \"react-materialize\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport * as actionCreators from \"../../store/actions/authActions\"; //connect to authActions\n\nconst MyNavbar = props => {\n  const { auth } = props;\n  const links =\n    auth.isAuthenticated === true ? (\n      <SignedInLinks props={props} />\n    ) : (\n      <SignedOutLinks />\n    );\n\n  return (\n    <Navbar className=\"green\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          URL Shorter\n        </Link>\n        {links}\n      </div>\n    </Navbar>\n  );\n};\n\n//connect redux store to component\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  actionCreators\n)(MyNavbar);\n","import React, { Component } from \"react\";\nimport { Row, Input, Button } from \"react-materialize\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as actionCreators from \"../../store/actions/authActions\"; //connect to authActions\n\nclass Register extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.registerUser(this.state);\n  }\n  render() {\n    if (this.props.auth.registerStatus) return <Redirect to=\"/login\" />;\n    let errorName = \"\";\n    let errorEmail = \"\";\n    let errorPassword2 = \"\";\n    let errorPassword = \"\";\n    if (this.props.auth.authError != null) {\n      errorName = this.props.auth.authError.name || \"\";\n      errorEmail = this.props.auth.authError.email || \"\";\n      errorPassword = this.props.auth.authError.password || \"\";\n      errorPassword2 = this.props.auth.authError.password2 || \"\";\n    }\n    return (\n      <form\n        onSubmit={this.handleSubmit.bind(this)}\n        className=\"center container\"\n      >\n        <Row>\n          <Input\n            s={12}\n            label=\"Name\"\n            id=\"name\"\n            error={errorName}\n            onChange={this.handleChange}\n          />\n          <Input\n            s={12}\n            type=\"email\"\n            label=\"Email\"\n            id=\"email\"\n            error={errorEmail}\n            onChange={this.handleChange}\n          />\n          <Input\n            s={12}\n            type=\"password\"\n            label=\"Password\"\n            id=\"password\"\n            error={errorPassword}\n            onChange={this.handleChange}\n          />\n          <Input\n            s={12}\n            type=\"password\"\n            label=\"Confirm Password\"\n            id=\"password2\"\n            error={errorPassword2}\n            onChange={this.handleChange}\n          />\n        </Row>\n        <Button type=\"submit\" value=\"Submit\">\n          Register\n        </Button>\n      </form>\n    );\n  }\n}\n\n//connect redux store to component\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  actionCreators\n)(Register);\n","import React, { Component } from \"react\";\nimport { Row, Input, Button } from \"react-materialize\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as actionCreators from \"../../store/actions/authActions\"; //connect to authActions\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.loginUser(this.state);\n  };\n  render() {\n    const { auth } = this.props;\n    if (auth.isAuthenticated) return <Redirect to=\"/\" />;\n    return (\n      <form\n        onSubmit={this.handleSubmit.bind(this)}\n        className=\"center container\"\n      >\n        <Row>\n          <Input\n            name=\"email\"\n            s={12}\n            type=\"email\"\n            label=\"Email\"\n            id=\"email\"\n            onChange={this.handleChange}\n          />\n          <Input\n            name=\"password\"\n            s={12}\n            type=\"password\"\n            label=\"Password\"\n            id=\"password\"\n            onChange={this.handleChange}\n          />\n        </Row>\n        <Button type=\"submit\" value=\"Submit\">\n          Login\n        </Button>\n      </form>\n    );\n  }\n}\n\n//connect redux store to component\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  actionCreators\n)(Login);\n","import axios from \"axios\";\nimport ApiUrl from '../../konfig/Api';\n\nexport const createShortUrl = url => dispatch => {\n  axios\n    .post(ApiUrl+\"api/shorters\", url)\n    .then(res => {\n      console.log(res);\n      dispatch({ type: \"SHORT_URL_SUCCESS\", res });\n    })\n    .catch(err => {\n      dispatch({ type: \"SHORT_URL_ERROR\", err });\n    });\n};\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { Modal, Button, Row, Input } from \"react-materialize\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../store/actions/shortUrlActions\"; //connect to shortUrlActions\n\nclass Home extends Component {\n  state = {\n    originalUrl: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createShortUrl(this.state);\n  };\n  render() {\n    const urlShort = this.props.shortUrl.urlShort || \"\";\n    return (\n      <div className=\"App App-header\">\n        <Modal header=\"Shorting URL\" trigger={<Button>Create</Button>}>\n          <form\n            onSubmit={this.handleSubmit.bind(this)}\n            className=\"center container\"\n          >\n            <Row>\n              <Input\n                s={12}\n                label=\"Paste your url\"\n                id=\"originalUrl\"\n                onChange={this.handleChange}\n              />\n            </Row>\n            <p>\n              Your short url :{\" \"}\n              {this.props.auth.isAuthenticated ? (\n                <a href={urlShort}>{urlShort}</a>\n              ) : (\n                \"Your login session outdated, You must login first\"\n              )}\n            </p>\n            <Button type=\"submit\" value=\"Submit\">\n              Create\n            </Button>\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n//connect redux store to component\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  actionCreators\n)(Home);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../../store/actions/authActions\"; //connect to authActions\nimport { Row } from \"react-materialize\";\n\nconst Profile = props => {\n  return (\n    <div className=\"blue lighten-5 \">\n      <Row className=\"container\">\n        <img src={props.auth.user.avatar} alt=\"profile\" className=\"circle\" />\n        <h4>{props.auth.user.name}</h4>\n      </Row>\n    </div>\n  );\n};\n\n//connect redux store to component\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  actionCreators\n)(Profile);\n","import React, { Component } from \"react\";\nimport { Row, Input, Button } from \"react-materialize\";\nimport axios from \"axios\";\nimport ApiUrl from '../../konfig/Api';\n\nclass EditUrl extends Component {\n  state = {\n    title: this.props.props.title,\n    urlCode: this.props.props.urlCode,\n    originalUrl: this.props.props.originalUrl,\n    shortUrl: this.props.props.shortUrl,\n    response: \"\"\n  };\n  handleChange(e) {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    axios\n      .put(\n        ApiUrl+\"api/shorters/update/\" + this.props.props._id,\n        {\n          ...this.state,\n          shortUrl: ApiUrl + this.state.urlCode\n        }\n      )\n      .then(res => {\n        this.setState({\n          response: res.status\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          response: 404\n        });\n      });\n  }\n  render() {\n    let response = \"\";\n    if (this.state.response === 200)\n      response = <p className=\"green-text\">Success</p>;\n    if (this.state.response === 404)\n      response = <p className=\"red-text\">Failed, URL already axist</p>;\n    return (\n      <form\n        onSubmit={this.handleSubmit.bind(this)}\n        className=\"center container\"\n      >\n        <Row>\n          <Input\n            s={12}\n            defaultValue={this.props.props.title}\n            label=\"title\"\n            id=\"title\"\n            onChange={this.handleChange.bind(this)}\n          />\n          <Input\n            s={12}\n            defaultValue={this.props.props.urlCode}\n            label={ApiUrl}\n            id=\"urlCode\"\n            onChange={this.handleChange.bind(this)}\n          />\n        </Row>\n        <div>{response}</div>\n        <Button type=\"submit\" value=\"Submit\">\n          Edit\n        </Button>\n      </form>\n    );\n  }\n}\n\nexport default EditUrl;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Row, Col, Input, Button, Modal } from \"react-materialize\";\nimport Profile from \"./profile\";\nimport openSocket from \"socket.io-client\";\nimport EditUrl from \"./editUrl\";\nimport ApiUrl from '../../konfig/Api';\n\nclass MyUrl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listUrl: [],\n      from: \"2001-01-01\",\n      to: \"9999-12-31\"\n    };\n  }\n\n  componentWillMount() {\n    axios\n      .get(ApiUrl+\"api/shorters\")\n      .then(res => {\n        this.setState({\n          listUrl: res.data\n        });\n      })\n      .catch(err => console.log(err));\n    const socket = openSocket(ApiUrl);\n    socket.on(\"shorter\", res => {\n      const data = this.state.listUrl.map(value => {\n        if (value.shortUrl === res.shortUrl) {\n          value.totalClicks = res.totalClicks;\n        }\n        return value;\n      });\n      this.setState({\n        listUrl: data\n      });\n    });\n    socket.on(\"shorterUpdate\", res => {\n      const data = this.state.listUrl.map(value => {\n        if (value._id === res._id) {\n          value = res;\n        }\n        return value;\n      });\n      this.setState({\n        listUrl: data\n      });\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.id]: this.formatDate(e.target.value)\n    });\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n  }\n  handlDelete(urlId) {\n    axios(ApiUrl+\"api/shorters/delete/\" + urlId, {\n      method: \"DELETE\"\n    })\n      .then(resData => {\n        this.setState(prevState => {\n          const updatedPosts = prevState.listUrl.filter(p => p._id !== urlId);\n          return { listUrl: updatedPosts };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  formatDate = val => {\n    const time = new Date(val);\n    const date = `${time.getFullYear()}-${time.getMonth() +\n      1}-${time.getDate()}`;\n    return date;\n  };\n\n  render() {\n    const { from, listUrl, to } = this.state;\n    const data = listUrl.filter(value => {\n      return (\n        this.formatDate(new Date(value.createdAt)) >= from &&\n        this.formatDate(new Date(value.createdAt)) <= to\n      );\n    });\n    const dataUrl = data.map(item => {\n      return (\n        <Row key={item._id} className=\"z-depth-1\">\n          <div className=\"container\">\n            <Col s={12}>Created At : {item.createdAt}</Col>\n            <Col s={12}>\n              <h4>{item.title || \"No Title\"}</h4>\n            </Col>\n            <Col s={12}>\n              Original Url : <a href={item.originalUrl}>{item.originalUrl}</a>\n            </Col>\n            <Col s={12}>\n              Short Url :{\" \"}\n              <a href={item.shortUrl} id={item.shortUrl}>\n                {item.shortUrl}\n              </a>\n            </Col>\n            <Col s={12}>\n              Total Clicks : <h4>{item.totalClicks}</h4>\n            </Col>\n            <Col s={12}>\n              <Button\n                s={2}\n                className=\"red \"\n                onClick={this.handlDelete.bind(this, item._id)}\n              >\n                Delete\n              </Button>\n              <Modal header=\"Shorting URL\" trigger={<Button>Edit</Button>}>\n                <EditUrl props={item} />\n              </Modal>\n            </Col>\n          </div>\n        </Row>\n      );\n    });\n    return (\n      <div className=\"center\">\n        <Profile />\n        <form onSubmit={this.handleSubmit.bind(this)} className=\"container\">\n          <Row>\n            <Input\n              s={6}\n              type=\"date\"\n              className=\"datepicker\"\n              label=\"from\"\n              id=\"from\"\n              onChange={this.handleChange.bind(this)}\n            />\n            <Input\n              s={6}\n              type=\"date\"\n              className=\"datepicker\"\n              label=\"to\"\n              id=\"to\"\n              onChange={this.handleChange.bind(this)}\n            />\n          </Row>\n        </form>\n        {dataUrl.length !== 0 ? dataUrl : \"Data not found\"}\n      </div>\n    );\n  }\n}\n\nexport default MyUrl;\n","import React, { Component } from \"react\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./store/actions/authActions\";\nimport store from \"./store\";\nimport ApiUrl from './konfig/Api';\n\nimport MyNavbar from \"./component/layout/Navbar\";\nimport Register from \"./component/auth/Register\";\nimport Login from \"./component/auth/Login\";\nimport Home from \"./component/Home\";\nimport MyUrl from \"./component/pages/myUrl\";\n\n// Check for token\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // TODO: Clear current Profile\n\n    // Redirect to login\n    window.location.href = \"/login\";\n  }\n  // console.log(decoded.exp, currentTime);\n}\n\nclass App extends Component {\n  render() {\n    console.log(ApiUrl)\n    return (\n      <BrowserRouter>\n        <div>\n          <MyNavbar />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/myurl\" component={MyUrl} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}